{"version":3,"sources":["stores/playerStore.jsx","stores/userStore.jsx","stores/matchStore.jsx","components/playerList/playerListItem.jsx","constants.js","APIUtils.js","services/MatchService.jsx","components/playerList/playerList.jsx","services/PlayerService.jsx","components/playersPane/matchButton.jsx","components/common/matchScoreModal.jsx","components/playersPane/playerPane.jsx","pages/ladderPage/ladderPage.jsx","components/common/PrivateRoute.jsx","services/UserService.jsx","pages/loginPage/LoginPage.jsx","pages/signupPage/Signup.jsx","history.js","components/common/AppHeader.jsx","components/common/LoadingIndicator.jsx","App.js","serviceWorker.js","index.js"],"names":["players","this","sort","a","b","rating","forEach","element","index","standing","push","playerId","userPlayer","selectedPlayer","player","observable","action","user","id","username","name","email","isAuthenticated","matches","selectedPlayerMatches","selectedPlayerLoading","userPlayerMatches","response","ongoingMatch","PlayerListItem","observer","onClick","ev","props","click","className","React","ACCESS_TOKEN","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","json","ok","Promise","reject","MatchService","getMatchByPlayer","method","createMatch","match","body","JSON","stringify","getOngoinMatch","endMatch","playerAScore","playerBScore","matchId","PlayerList","inject","console","log","playerStore","selectPlayer","matchStore","setSelectedPlayerMatches","catch","err","map","bind","key","PlayerService","getPlayers","MatchButton","handleOk","e","state","setState","visible","error","handleCancel","playerAScoreChange","playerBScoreChange","score","playerA","title","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","defaultValue","min","size","onChange","playerB","current_state","Component","aScore","bScore","samePlayerAsMatch","setPlayers","playerAId","playerBId","getNames","getInputs","PlayerPane","other","_","isEmpty","icon","matchButton","LadderPage","style","height","span","PrivateRoute","component","userStore","rest","render","to","pathname","from","location","UserService","login","loginRequest","signup","signupRequest","checkUsernameAvailability","checkEmailAvailability","getCurrentUser","getUserProfile","getNotifications","FormItem","Form","Item","LoginPage","handleSubmit","event","preventDefault","form","validateFields","values","setItem","accessToken","onLogin","status","notification","message","description","getFieldDecorator","onSubmit","rules","required","prefix","type","placeholder","htmlType","create","SignupPage","validateEmail","RegExp","test","includes","split","length","validateStatus","errorMsg","validatePassword","password","validationStatus","value","handleInputChange","validateEmailAvailability","isFormInvalid","validationFun","target","inputName","inputValue","success","history","label","hasFeedback","help","autoComplete","onBlur","emailValue","emailValidation","available","createBrowserHistory","Header","Layout","AppHeader","handleMenuClick","onLogout","menuItems","ProfileDropdownMenu","currentUser","mode","theme","selectedKeys","lineHeight","dropdownMenu","Divider","overlay","trigger","getPopupContainer","document","getElementsByClassName","href","marginRight","withRouter","LoadingIndicator","antIcon","fontSize","spin","indicator","display","textAlign","marginTop","Content","stores","App","isLoading","handleLogout","loadCurrentUser","handleLogin","config","placement","top","duration","setUser","setUserPlayer","getUserString","setOngoingMatch","redirectTo","notificationType","removeItem","basename","exact","path","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f88113e0.chunk.js","sourcesContent":["import {observable, action} from \"mobx\";\n\nclass PlayerStore {\n    @observable players = []\n    @observable selectedPlayer = {}\n    @observable userPlayer = {}\n\n    @action setPlayers(players) {\n        this.players = [];\n\n        players.sort((a,b) => {\n            return b.rating - a.rating;\n        })\n\n        players.forEach((element, index) => {\n            element.standing = index+1;\n            this.players.push(element);\n            if(element.playerId === this.userPlayer.playerId)\n            {\n                this.userPlayer = element;\n            }\n\n            if(this.selectedPlayer != null && element.playerId === this.selectedPlayer.playerId)\n            {\n                this.selectedPlayer = element;\n            }\n        });\n    }\n\n    @action selectPlayer(player) {\n        this.selectedPlayer = player;\n    }\n\n    @action setUserPlayer(player) {\n        this.userPlayer = player;\n    }\n}\n\nexport default new PlayerStore()\n","import {observable, action} from \"mobx\";\n\nclass UserStore {\n    @observable username = \"\"\n    @observable email = \"\"\n    @observable id = 0\n    @observable player = {}\n    @observable isAuthenticated = false\n\n    @action setUser(user) {\n\n        this.id = user.id;\n        this.username = user.name;\n        this.email = user.email;\n        this.isAuthenticated = true;\n        this.player = user.player;\n    }\n\n    getUserString() {\n        return this.id + \" \" + this.username + \" \" + this.isAuthenticated;\n    }\n}\n\nexport default new UserStore();\n","import {observable, action} from \"mobx\";\n\nclass MatchStore {\n    @observable selectedPlayerMatches = [];\n    @observable userPlayerMatches = [];\n    @observable selectedPlayerLoading = false;\n    @observable ongoingMatch = {}\n\n    @action setSelectedPlayerMatches(matches) {\n        this.selectedPlayerMatches = matches;\n        this.selectedPlayerLoading = false;\n    }\n\n    @action setUserPlayerMatches(matches) {\n        this.userPlayerMatches = matches;\n    }\n\n    @action setOngoingMatch(response) {\n        this.ongoingMatch = response;\n    }\n}\n\nexport default new MatchStore();","import * as React from \"react\";\nimport {observer} from \"mobx-react\";\nimport \"./PlayerListItem.css\";\n\n@observer\nclass PlayerListItem extends React.Component {\n\n    render() {\n        return (\n            <div onClick={(ev) => this.props.click(ev,this.props.player)} className={\"playerListItem\"}>\n                <span className={\"rank\"}><h2>{this.props.player.standing} </h2></span>\n                <span className={\"name\"}><h2>{this.props.player.name}</h2></span>\n            </div>)\n    }\n}\n\nexport default PlayerListItem","export const ACCESS_TOKEN = 'accessToken';\n\nexport const EMAIL_MAX_LENGTH = 40;\n\nexport const PASSWORD_MIN_LENGTH = 6;\nexport const PASSWORD_MAX_LENGTH = 20;\n\nexport const APP_NAME = \"League\";","import {ACCESS_TOKEN} from './constants';\n\nexport function request(options) {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n\n\n    if (localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch('/api' + options.url, options)\n        .then(response =>\n            response.json().then(json => {\n                if (!response.ok) {\n                    return Promise.reject(json);\n                }\n                return json;\n            })\n        );\n};","import { request } from '../APIUtils';\n\nconst MatchService = {\n    getMatchByPlayer: function(player) {\n        return request({\n            url: \"/match/byPlayer?playerId=\"+player.playerId,\n            method: 'GET'\n        });\n    },\n\n    createMatch: function(match) {\n        return request({\n            url: \"/match\",\n            method: 'POST',\n            body: JSON.stringify(match)\n        })\n    },\n\n    getOngoinMatch: function() {\n        return request({\n            url: \"/match/ongoing\",\n            method: 'GET'\n        });\n    },\n\n    endMatch: function(playerAScore,playerBScore, matchId) {\n        let body = {\n            matchId: matchId,\n            playerAScore: playerAScore,\n            playerBScore: playerBScore\n        }\n        return request({\n            url: \"/match/end\",\n            method: 'POST',\n            body: JSON.stringify(body)\n        })\n    }\n\n}\n\nexport default MatchService;","import * as React from \"react\";\nimport PlayerListItem from \"./playerListItem\";\nimport { observer, inject } from \"mobx-react\";\nimport './playerList.css';\nimport MatchService from \"../../services/MatchService\";\n\n@inject('matchStore') @inject('playerStore') @observer\nclass PlayerList extends React.Component {\n\n    onClick(ev, player) {\n        console.log(\"clicked \" + ev + \" \" + player.name)\n        console.log(player.playerId)\n        console.log(this.props.playerStore.userPlayer.playerId)\n\n        if(player.playerId === this.props.playerStore.userPlayer.playerId)\n        {\n            return;\n        }\n        this.props.playerStore.selectPlayer(player);\n\n        this.props.matchStore.selectedPlayerLoading = true;\n        MatchService.getMatchByPlayer(this.props.playerStore.selectedPlayer).then((response) => {\n            this.props.matchStore.setSelectedPlayerMatches(response);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        return (\n            <div className={\"playerList\"}>\n                {this.props.players.map((player, index) => {\n                    return <PlayerListItem click={this.onClick.bind(this)} key={player.id} player={player} />\n                })}\n            </div>\n        )\n    }\n}\n\nexport default PlayerList;","import { request } from '../APIUtils';\n\nconst PlayerService = {\n    getPlayers: function() {\n        return request({\n            url: \"/players\",\n            method: 'GET'\n        });\n    }\n\n}\n\nexport default PlayerService;","import * as React from \"react\";\n\nimport \"./matchButton.css\";\nimport {inject, observer} from \"mobx-react\";\nimport MatchService from \"../../services/MatchService\";\nimport PlayerService from \"../../services/PlayerService\";\nimport MatchScoreModal from \"../common/matchScoreModal\";\nimport {InputNumber} from \"antd\";\n\n@inject(\"playerStore\")\n@inject(\"matchStore\")\n@observer\nclass MatchButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {aScore: 0, bScore: 0}\n\n        this.playerAScoreChange = this.playerAScoreChange.bind(this);\n        this.playerBScoreChange = this.playerBScoreChange.bind(this);\n    }\n\n    samePlayerAsMatch(playerId) {\n        return this.props.matchStore.ongoingMatch\n                && this.props.matchStore.ongoingMatch.playerB\n                && (this.props.matchStore.ongoingMatch.playerB.id === playerId || this.props.matchStore.ongoingMatch.playerA.id === playerId);\n    }\n\n    onClick(ev) {\n        if (\n            this.samePlayerAsMatch(this.props.playerStore.selectedPlayer.playerId)\n        ) {\n            console.log(this.state);\n            MatchService.endMatch(this.state.aScore, this.state.bScore, this.props.matchStore.ongoingMatch.id)\n                .then(response => {\n                    console.log(response);\n                    this.props.matchStore.ongoingMatch = null;\n                    this.setState({aScore: 0, bScore: 0})\n                    PlayerService.getPlayers().then((response) => {\n                        this.props.playerStore.setPlayers(response);\n                    })\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n\n            return;\n        }\n\n        let match = {};\n        match.playerAId = this.props.playerStore.userPlayer.playerId;\n        match.playerBId = this.props.playerStore.selectedPlayer.playerId;\n\n        MatchService.createMatch(match)\n            .then(response => {\n                this.props.matchStore.ongoingMatch = response;\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    playerAScoreChange(score) {\n        this.setState({aScore: score});\n    }\n\n    playerBScoreChange(score) {\n            this.setState({bScore: score});\n        }\n\n    getNames()\n    {\n        return (\n            <div className=\"names\">\n                <span>{this.props.matchStore.ongoingMatch.playerA.user.username}</span>\n                <span>{this.props.matchStore.ongoingMatch.playerB.user.username}</span>\n            </div>\n        )\n    }\n\n    getInputs() {\n        if (this.samePlayerAsMatch(this.props.playerStore.selectedPlayer.playerId)) {\n            return <div className=\"inputs\">\n                <InputNumber\n                    defaultValue={0}\n                    min={0}\n                    size={\"large\"}\n                    onChange={this.playerAScoreChange}\n                />\n                <InputNumber\n                    defaultValue={0}\n                    min={0}\n                    size={\"large\"}\n                    onChange={this.playerBScoreChange}\n                />\n            </div>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"matchButton\">\n                {this.getNames()}\n                {this.getInputs()}\n                <div\n                    onClick={this.onClick.bind(this)}\n                    className={\n                    \"button \" +\n                        (this.samePlayerAsMatch(\n                            this.props.playerStore.selectedPlayer.playerId\n                        )\n                            ? \"endMatch\"\n                            : \"createMatch\")\n                    }\n                >\n                    {this.samePlayerAsMatch(this.props.playerStore.selectedPlayer.playerId)\n                        ? \"END MATCH\"\n                        : \"MATCH\"}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MatchButton;\n","import React from \"react\";\nimport { Modal, InputNumber } from \"antd\";\nimport { inject, observer } from \"mobx-react\";\n\nimport \"./matchScoreModal.css\";\nimport MatchService from \"../../services/MatchService\";\n\n@inject(\"matchStore\")\n@observer\nclass MatchScoreModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: props.visible\n    };\n\n    this.ongoingMatch = this.props.matchStore.ongoingMatch;\n    this.playerAScoreChange = this.playerAScoreChange.bind(this);\n    this.playerBScoreChange = this.playerBScoreChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, current_state) {\n    if (current_state.visible !== props.visible) {\n      return {\n        visible: props.visible\n      };\n    }\n    return null;\n  }\n\n  handleOk = e => {\n    console.log(e);\n    console.log(this.state.playerAScore + \" \" + this.state.playerBScore);\n\n    MatchService.endMatch(\n      this.state.playerAScore,\n      this.state.playerBScore,\n      this.ongoingMatch.id\n    )\n      .then(response => {\n        this.setState({\n          visible: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false\n    });\n  };\n\n  playerAScoreChange(score) {\n    this.setState({ playerAScore: score });\n  }\n\n  playerBScoreChange(score) {\n    this.setState({ playerBScore: score });\n  }\n\n  render() {\n      if(!this.ongoingMatch.playerA)\n      {\n          return \"\";\n      }\n    return (\n      <div>\n        <Modal\n          title=\"Enter score\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: false }}\n        >\n          <div className={\"players\"}>\n            <div className={\"player playerA\"}>\n              <h2>{this.ongoingMatch.playerA.user.name}</h2>\n              <div>\n                <InputNumber\n                  defaultValue={0}\n                  min={0}\n                  size={\"large\"}\n                  onChange={this.playerAScoreChange}\n                />\n              </div>\n            </div>\n\n            <div className={\"player playerB\"}>\n              <h2>{this.ongoingMatch.playerB.user.name}</h2>\n              <InputNumber\n                defaultValue={0}\n                min={0}\n                size={\"large\"}\n                onChange={this.playerBScoreChange}\n              />\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MatchScoreModal;\n","import * as React from \"react\";\nimport \"./playerPane.css\";\nimport _ from \"lodash\";\nimport { Avatar } from \"antd\";\n\nimport MatchButton from \"./matchButton\";\n\nclass PlayerPane extends React.Component {\n\n  matchButton() {\n    if (this.props.other) return (<MatchButton/>);\n  }\n  render() {\n    if (_.isEmpty(this.props.player)) {\n      return <div className={\"playerPane\"}></div>;\n    }\n    return (\n      <div className={\"playerPane\"}>\n        <div className={\"playerImage\"}>\n          <Avatar size={82} icon=\"user\" />\n        </div>\n        <div className={\"playerName\"}>\n          #{this.props.player.standing} {this.props.player.name}\n        </div>\n        <div className={\"playerRating\"}>\n          <h2>Rating</h2>\n          <h2>{this.props.player.rating}</h2>\n        </div>\n\n        {this.matchButton()}\n      </div>\n    );\n  }\n}\n\nexport default PlayerPane;\n","import * as React from \"react\";\nimport {inject, observer} from \"mobx-react\";\nimport PlayerList from \"../../components/playerList/playerList\";\nimport PlayerService from \"../../services/PlayerService\";\nimport {Col} from \"antd\";\n\nimport _ from 'lodash';\n\nimport './ladderPage.css';\nimport PlayerPane from \"../../components/playersPane/playerPane\";\n\n@inject('playerStore') @inject('userStore') @observer\nclass LadderPage extends React.Component {\n\n    componentDidMount() {\n        this.props.playerStore.selectPlayer(null);\n        PlayerService.getPlayers().then((response) => {\n            this.props.playerStore.setPlayers(response);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"ladderContent\" style={{height: \"100%\"}}>\n                <Col style={{height: \"100%\"}} span={5}>\n                    <PlayerList players={this.props.playerStore.players}/>\n                </Col>\n                <Col style={{height: \"100%\"}} span={14}>\n                    <PlayerPane player={this.props.playerStore.userPlayer}/>\n                    <PlayerPane player={this.props.playerStore.selectedPlayer} other={true}/>\n                </Col>\n            </div>\n        )\n    }\n}\n\nexport default LadderPage;","import React from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\n\n\nconst PrivateRoute = ({component: Component, userStore, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            userStore.isAuthenticated ? (\n                <Component {...rest} {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/login',\n                        state: {from: props.location}\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute","import {ACCESS_TOKEN} from \"../constants\";\nimport { request } from '../APIUtils';\n\nconst UserService = {\n    login: function (loginRequest) {\n        return request({\n            url: \"/auth/signin\",\n            method: 'POST',\n            body: JSON.stringify(loginRequest)\n        });\n    },\n\n    signup: function (signupRequest) {\n        return request({\n            url: \"/auth/signup\",\n            method: 'POST',\n            body: JSON.stringify(signupRequest)\n        });\n    },\n\n    checkUsernameAvailability: function (username) {\n        return request({\n            url: \"/user/checkUsernameAvailability?username=\" + username,\n            method: 'GET'\n        });\n    },\n\n    checkEmailAvailability: function (email) {\n        return request({\n            url: \"/user/checkEmailAvailability?email=\" + email,\n            method: 'GET'\n        });\n    },\n\n    getCurrentUser: function () {\n        if (!localStorage.getItem(ACCESS_TOKEN)) {\n            return Promise.reject(\"No access token set.\");\n        }\n\n        return request({\n            url: \"/user/me\",\n            method: 'GET'\n        });\n    },\n\n    getUserProfile: function (username) {\n        return request({\n            url: \"/users/\" + username,\n            method: 'GET'\n        });\n    },\n\n    getNotifications: function() {\n        return request({\n            url: \"/user/notifications\",\n            method: 'GET'\n        })\n    }\n}\n\nexport default UserService;","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, notification } from \"antd\";\n\nimport \"./LoginPage.css\";\nimport UserService from \"../../services/UserService\";\nimport { ACCESS_TOKEN, APP_NAME } from \"../../constants\";\n\nconst FormItem = Form.Item;\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const loginRequest = Object.assign({}, values);\n        UserService.login(loginRequest)\n          .then(response => {\n            localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n            this.props.onLogin();\n          })\n          .catch(error => {\n            if (error.status === 401) {\n              notification.error({\n                message: APP_NAME,\n                description:\n                  \"Your email or password is incorrect. Please try again!\"\n              });\n            } else {\n              notification.error({\n                message: APP_NAME,\n                description:\n                  error.message ||\n                  \"Sorry! Something went wrong. Please try again!\"\n              });\n            }\n          });\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <h1 className=\"page-title\">Login</h1>\n        <FormItem>\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your email!\"\n              }\n            ]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" />}\n              size=\"large\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" />}\n              size=\"large\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            className=\"login-form-button\"\n          >\n            Login\n          </Button>\n          Or <Link to=\"/signup\">register now!</Link>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create({ name: \"login_page\" })(LoginPage);\n","import React, {Component} from \"react\";\nimport \"./Signup.css\";\nimport {Link} from \"react-router-dom\";\nimport {APP_NAME, EMAIL_MAX_LENGTH, PASSWORD_MAX_LENGTH, PASSWORD_MIN_LENGTH} from \"../../constants\";\n\nimport {Button, Form, Input, notification} from \"antd\";\nimport UserService from '../../services/UserService';\n\nconst FormItem = Form.Item;\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: {\n        value: \"\"\n      },\n      password: {\n        value: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n  }\n\n  handleInputChange(event, validationFun) {\n    const target = event.target;\n    const inputName = target.name;\n    const inputValue = target.value;\n\n    this.setState({\n      [inputName]: {\n        value: inputValue,\n        ...validationFun(inputValue)\n      }\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const signupRequest = {\n      email: this.state.email.value,\n      password: this.state.password.value\n    };\n    UserService.signup(signupRequest)\n      .then(response => {\n        notification.success({\n          message: APP_NAME,\n          description:\n            \"Thank you! You're successfully registered. Please Login to continue!\"\n        });\n        this.props.history.push(\"/login\");\n      })\n      .catch(error => {\n        notification.error({\n          message: APP_NAME,\n          description:\n            error.message || \"Sorry! Something went wrong. Please try again!\"\n        });\n      });\n  }\n\n  isFormInvalid() {\n    return !(\n      this.state.email.validateStatus === \"success\" &&\n      this.state.password.validateStatus === \"success\"\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"signup-container\">\n        <h1 className=\"page-title\">Sign Up</h1>\n        <div className=\"signup-content\">\n          <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n            <FormItem\n              label=\"Email\"\n              hasFeedback\n              validateStatus={this.state.email.validateStatus}\n              help={this.state.email.errorMsg}\n            >\n              <Input\n                size=\"large\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                placeholder=\"Your email\"\n                value={this.state.email.value}\n                onBlur={this.validateEmailAvailability}\n                onChange={event =>\n                  this.handleInputChange(event, this.validateEmail)\n                }\n              />\n            </FormItem>\n            <FormItem\n              label=\"Password\"\n              validateStatus={this.state.password.validateStatus}\n              help={this.state.password.errorMsg}\n            >\n              <Input\n                size=\"large\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                placeholder=\"A password between 6 to 20 characters\"\n                value={this.state.password.value}\n                onChange={event =>\n                  this.handleInputChange(event, this.validatePassword)\n                }\n              />\n            </FormItem>\n            <FormItem>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"large\"\n                className=\"signup-form-button\"\n                disabled={this.isFormInvalid()}\n              >\n                Sign up\n              </Button>\n              Already registed? <Link to=\"/login\">Login now!</Link>\n            </FormItem>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n\n  // Validation Functions\n\n  validateEmail = email => {\n    if (!email) {\n      return {\n        validateStatus: \"error\",\n        errorMsg: \"Email may not be empty\"\n      };\n    }\n\n    const EMAIL_REGEX = RegExp(\"[^@ ]+@[^@ ]+\\\\.[^@ ]+\");\n    if (!EMAIL_REGEX.test(email)) {\n      return {\n        validateStatus: \"error\",\n        errorMsg: \"Email not valid\"\n      };\n    }\n\n      if (!email.includes(\"@siemens-logistics.com\")) {\n          return {\n              validateStatus: \"error\",\n              errorMsg: \"Email is not from 'siemens-logistics.com' domain\"\n          }\n      }\n\n      const firstParts = email.split(\"@\")[0].split(\".\").length;\n\n      if (firstParts != 2) {\n          return {\n              validateStatus: \"error\",\n              errorMsg: \"Email is not in 'name.surname@siemens-logistics.com' form\"\n          }\n      }\n\n    if (email.length > EMAIL_MAX_LENGTH) {\n      return {\n        validateStatus: \"error\",\n        errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\n      };\n    }\n\n    return {\n      validateStatus: null,\n      errorMsg: null\n    };\n  };\n\n  validateEmailAvailability() {\n    // First check for client side errors in email\n    const emailValue = this.state.email.value;\n    const emailValidation = this.validateEmail(emailValue);\n\n    if (emailValidation.validateStatus === \"error\") {\n      this.setState({\n        email: {\n          value: emailValue,\n          ...emailValidation\n        }\n      });\n      return;\n    }\n\n    this.setState({\n      email: {\n        value: emailValue,\n        validateStatus: \"validating\",\n        errorMsg: null\n      }\n    });\n\n    UserService.checkEmailAvailability(emailValue)\n      .then(response => {\n        if (response.available) {\n          this.setState({\n            email: {\n              value: emailValue,\n              validateStatus: \"success\",\n              errorMsg: null\n            }\n          });\n        } else {\n          this.setState({\n            email: {\n              value: emailValue,\n              validateStatus: \"error\",\n              errorMsg: \"This Email is already registered\"\n            }\n          });\n        }\n      })\n      .catch(error => {\n        // Marking validateStatus as success, Form will be recchecked at server\n        this.setState({\n          email: {\n            value: emailValue,\n            validateStatus: \"success\",\n            errorMsg: null\n          }\n        });\n      });\n  }\n\n  validatePassword = password => {\n    if (password.length < PASSWORD_MIN_LENGTH) {\n      return {\n        validateStatus: \"error\",\n        errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\n      };\n    } else if (password.length > PASSWORD_MAX_LENGTH) {\n      return {\n        validationStatus: \"error\",\n        errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\n      };\n    } else {\n      return {\n        validateStatus: \"success\",\n        errorMsg: null\n      };\n    }\n  };\n}\n\nexport default SignupPage;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport './AppHeader.css';\nimport {Dropdown, Icon, Layout, Menu} from 'antd';\nimport { inject } from 'mobx-react';\nimport { observer } from 'mobx-react';\n\nconst Header = Layout.Header;\n\n@inject('userStore') @inject('matchStore') @observer \nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n    }\n\n    handleMenuClick({key}) {\n        if (key === \"logout\") {\n            this.props.onLogout();\n        }\n    }\n\n    render() {\n        let menuItems;\n        if (this.props.userStore.isAuthenticated) {\n            menuItems = [\n                <Menu.Item key=\"/\">\n                    <Link to=\"/\">\n                        <Icon type=\"home\" className=\"nav-icon\"/>\n                    </Link>\n                </Menu.Item>,\n                <Menu.Item key=\"/profile\" className=\"profile-menu\">\n                    <ProfileDropdownMenu\n                        currentUser={this.props.userStore}\n                        handleMenuClick={this.handleMenuClick}/>\n                </Menu.Item>\n            ];\n        } else {\n            menuItems = [\n                <Menu.Item key=\"/login\">\n                    <Link to=\"/login\">Login</Link>\n                </Menu.Item>,\n                <Menu.Item key=\"/signup\">\n                    <Link to=\"/signup\">Signup</Link>\n                </Menu.Item>\n            ];\n        }\n\n        return (\n            <Header className=\"app-header\">\n                <div className=\"container\">\n                    <div className=\"app-title\">\n                        <Link to=\"/\">League</Link>\n                    </div>\n                    <Menu\n                        className=\"app-menu\"\n                        mode=\"horizontal\"\n                        theme=\"dark\"\n                        selectedKeys={[this.props.location.pathname]}\n                        style={{lineHeight: '64px'}}>\n                        {menuItems}\n                    </Menu>\n                </div>\n            </Header>\n        );\n    }\n}\n\nfunction ProfileDropdownMenu(props) {\n    const dropdownMenu = (\n        <Menu theme=\"light\" onClick={props.handleMenuClick} className=\"profile-dropdown-menu\">\n            <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\n                <div className=\"user-full-name-info\">\n                    {props.currentUser.name}\n                </div>\n                <div className=\"username-info\">\n                    @{props.currentUser.username}\n                </div>\n            </Menu.Item>\n            <Menu.Divider/>\n            <Menu.Item key=\"profile\" className=\"dropdown-item\">\n                <Link to={`/users/${props.currentUser.username}`}>Profile</Link>\n            </Menu.Item>\n            <Menu.Item key=\"logout\" className=\"dropdown-item\">\n                Logout\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <Dropdown\n            overlay={dropdownMenu}\n            trigger={['click']}\n            getPopupContainer={() => document.getElementsByClassName('profile-menu')[0]}>\n            <a href=\"#\" className=\"ant-dropdown-link\">\n                <Icon type=\"user\" className=\"nav-icon\" style={{marginRight: 0}}/> <Icon type=\"down\"/>\n            </a>\n        </Dropdown>\n    );\n}\n\n\nexport default withRouter(AppHeader);","import React from 'react';\nimport {Icon, Spin} from 'antd';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{fontSize: 30}} spin/>;\n    return (\n        <Spin indicator={antIcon} style={{display: 'block', textAlign: 'center', marginTop: 30}}/>\n    );\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Provider, observer } from \"mobx-react\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport playerStore from \"./stores/playerStore\";\nimport userStore from \"./stores/userStore\";\nimport matchStore from \"./stores/matchStore\";\nimport LadderPage from \"./pages/ladderPage/ladderPage\";\nimport { Layout, notification } from \"antd\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport LoginPage from \"./pages/loginPage/LoginPage\";\nimport { Component } from \"react\";\nimport SignupPage from \"./pages/signupPage/Signup\";\nimport UserService from \"./services/UserService\";\nimport { ACCESS_TOKEN, APP_NAME } from \"./constants\";\n\nimport history from \"./history\";\nimport AppHeader from \"./components/common/AppHeader\";\nimport LoadingIndicator from \"./components/common/LoadingIndicator\";\nimport MatchService from \"./services/MatchService\";\n\nconst { Content } = Layout;\n\nconst stores = { playerStore, userStore, matchStore };\n\n@observer\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false\n    };\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: \"topRight\",\n      top: 70,\n      duration: 3\n    });\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n\n    UserService.getCurrentUser()\n      .then(response => {\n        console.log(response);\n\n        userStore.setUser(response);\n        playerStore.setUserPlayer(response.player);\n\n        console.log(userStore.getUserString());\n        console.log(userStore.isAuthenticated);\n\n        MatchService.getOngoinMatch().then((response) => {\n          matchStore.setOngoingMatch(response);\n          console.log(response);\n        }).catch(err => {\n          console.log(err);\n        });\n\n        UserService.getNotifications().then((response) => {\n            console.log(response);\n        }).catch(err => {\n            console.log(response);\n        })\n\n        this.setState({\n          isLoading: false\n        });\n\n        history.push(\"/\");\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  // Handle Logout, Set currentUser and isAuthenticated state which will be passed to other components\n  handleLogout(\n    redirectTo = \"/\",\n    notificationType = \"success\",\n    description = \"You're successfully logged out.\"\n  ) {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    userStore.isAuthenticated = false;\n    userStore.id = 0;\n    userStore.username = \"\";\n\n    history.push(redirectTo);\n\n    notification[notificationType]({\n      message: APP_NAME,\n      description: description\n    });\n  }\n\n  /*\n This method is called by the Login component after successful login\n so that we can load the logged-in user details and set the currentUser &\n isAuthenticated state, which other components will use to render their JSX\n*/\n  handleLogin() {\n    notification.success({\n      message: APP_NAME,\n      description: \"You're successfully logged in.\"\n    });\n    this.loadCurrentUser();\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingIndicator />;\n    }\n    return (\n      <Layout className=\"layout\">\n        <Provider {...stores}>\n          <Router basename={\"/web\"} history={history}>\n            <AppHeader onLogout={this.handleLogout} />\n            <Content className=\"app-content\">\n              <div className=\"container\">\n                <Switch>\n                  <PrivateRoute\n                    exact\n                    path=\"/\"\n                    {...stores}\n                    component={LadderPage}\n                    handleLogout={this.handleLogout}\n                  ></PrivateRoute>\n                  <Route\n                    exact\n                    path=\"/login\"\n                    render={props => (\n                      <LoginPage onLogin={this.handleLogin} {...props} />\n                    )}\n                  ></Route>\n                  <Route exact path=\"/signup\" component={SignupPage} />\n                    <Route render={props => (<div>NotFound</div>)} />\n                </Switch>\n              </div>\n            </Content>\n          </Router>\n        </Provider>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}